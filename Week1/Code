import numpy as np
import matplotlib.pyplot as plt
import math

class Unicycle:
    def __init__(self, x: float, y: float, theta: float, dt: float):
        self.x = x
        self.y = y
        self.theta = theta
        self.dt = dt

        # Store the points of the trajectory to plot
        self.x_points = [self.x]
        self.y_points = [self.y]

    def step(self, v: float, w: float, n: int):
        """
        Write the Kinematics model here
        Expectation:
            1. Given v, w and the current state self.x, self.y, self.theta
                and control commands (v, w) for n timesteps, i.e. n * dt seconds,
                return the final pose (x, y, theta) after this time.
            2. Append all intermediate points into the self.x_points, self.y_points list
                for plotting the trajectory.
        Args:
            v (float): linear velocity
            w (float): angular velocity
            n (int)  : timesteps
        Return:
            x, y, theta (float): final pose 
        """
        i=1
        while i<=n:
            self.x_points.append(self.x)
            self.y_points.append(self.y)
            self.x=self.x+v*math.cos(self.theta)*self.dt
            self.y=self.y+v*math.sin(self.theta)*self.dt
            self.theta =self.theta+w*self.dt
            i=i+1            

    def plot(self, v: float, w: float):
        """Function that plots the intermeditate trajectory of the Robot"""
        plt.title(f"Unicycle Model: {v}, {w}")
        plt.xlabel("X-Coordinates")
        plt.ylabel("Y-Coordinates")
        plt.plot(self.x_points, self.y_points, color="red", alpha=0.75)
        plt.grid()

        # If you want to view the plot uncomment plt.show() and comment out plt.savefig()
        plt.show()
        # If you want to save the file, uncomment plt.savefig() and comment out plt.show()
        # plt.savefig(f"Unicycle_{v}_{w}.png")

if __name__ == "__main__":
    print("Unicycle Model Assignment")

    p1 = Unicycle(0,0,0.77,0.05)
    p1.step(5.0,4.0,50)
    p1.plot(5.0,4.0)

    p2=Unicycle(0,0,0,0.1)
    p2.step(1,0.5,25)
    p2.plot(1,0.5)

    p3=Unicycle(0,0,1.57,0.2)
    p3.step(0.5,1,10)
    p3.plot(0.5,1)
